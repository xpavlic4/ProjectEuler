/**
  * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

  * 22=4, 23=8, 24=16, 25=32
  * 32=9, 33=27, 34=81, 35=243
  * 42=16, 43=64, 44=256, 45=1024
  * 52=25, 53=125, 54=625, 55=3125
  * If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

  * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

  * How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
  */
object Problem29 {

   def decompose1(i: Int, curr: Int, seq: Seq[Int]): scala.Seq[Int] = {
    if (i == 1)
      seq
    else if (i % curr == 0) {
      decompose1(i / curr, curr, seq :+ curr)
    } else {
      decompose1(i, curr+1, seq)
    }
  }

  def decompose(i: Int) : Seq[Int]  = {
    decompose1(i, 2, Seq())
  }

  var s: Set[Seq[Int]] = Set()

  def main(args: Array[String]): Unit = {
    for (i<- 2 to 100) {
      val fact: Seq[Int] = decompose(i)
      for (j <- 2 to 100) {
        s += Seq.fill(j)(fact).flatten.sorted
      }
    }
    println(s.size)
  }
}